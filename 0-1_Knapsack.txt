static int knapsack(int W, int wt[], int val[], int n,int table[][])
    {
        if(W==0||n==0)
        return 0;
    if(table[n][W]!=0)
    return table[n][W];
    
        if(wt[n-1]>W)
        return table[n][W]=knapsack(W,wt,val,n-1,table);
        else
        {
            return table[n][W]=Math.max(val[n-1]+knapsack(W-wt[n-1],wt,val,n-1,table),knapsack(W,wt,val,n-1,table));
        }
        
    }
    //Function to return max value that can be put in knapsack of capacity W.
    static int knapSack(int W, int wt[], int val[], int n) 
    { 
     int[][] table=new int[n+1][W+1];    
        return  knapsack(W,wt,val,n,table);
        
    } 
